<?php
/**
 */

namespace app\commands;

use app\models\Order;
use app\models\Stock;
use yii\console\Controller;
use yii\console\ExitCode;
use yii\helpers\Console;
use function Symfony\Component\String\s;

/**
 */
class OrderController extends Controller
{

    public $isAll = false;

    public function beforeAction($action)
    {
        $this->color = true;
        return parent::beforeAction($action); // TODO: Change the autogenerated stub
    }

    public function options($actionID)
    {
        return ['isAll'];
    }

    public function actionIndex()
    {

        $query = Order::find();
        $orders = null;
        if ($this->isAll) {
           $orders =  $query->all();
        } else {
           $orders =   $query->orderBy([
                'created_at' => SORT_DESC
            ])->limit(10)->all();
        }

        foreach ($orders as $order){
            var_dump($order->id . 'Id'. PHP_EOL);
            var_dump($order->type . 'Type'. PHP_EOL);
            var_dump($order->amount . 'amount'. PHP_EOL);
            var_dump($order->price . 'price'. PHP_EOL);
            var_dump($order->customer_id . 'customer_id'. PHP_EOL);
            var_dump($order->created_at . 'created_at'. PHP_EOL);
            var_dump($order->updated_at . 'updated_at'. PHP_EOL);
            var_dump($order->stock_id . 'stock_id'. PHP_EOL);
            var_dump("__________________________ ");
        }

    }

    public function actionCreate()
    {
            // order create
        $this->stdout('sell'.PHP_EOL, Console::BG_GREEN);
        $this->stdout('yoki'.PHP_EOL);
        $this->stdout('buy'.PHP_EOL, Console::BG_GREEN);
        $type =  $this->Input('Type ni tanglang', true, 'type ni tanlang');
        (int)$amount =  $this->Input('Amount kiriting Integer', true, 'Amount kiriting');
        (float)$price =  $this->Input('Priceni kiriting Float', true, 'Amount kiriting');

        $stocks = Stock::find()->all();

        foreach ($stocks as $stock){
            var_dump($stock->id. ' '. $stock->name.PHP_EOL);
        }

        (int)$stock_id =  $this->Input('Stock Id kiriting INTEGER ', true, 'Stock Id Tanlang');

        (int)$customer_id =  $this->Input("Kim sotyotgan yoki Olmoqchi bo'lgan user id sini kiring", true, 'Customer id');

       $bool =  Order::push_order($type, $amount, $price, $stock_id, $customer_id);

       if($bool){
           return ExitCode::OK;
       }
       return ExitCode::NOINPUT;

    }

    public function actionUpdate()
    {


    }

    public function actionView()
    {

       (int) $order_id =  $this->Input('Order id kiriting ', true, 'Order id majburiy');

       $order = Order::findOne(['id' => $order_id ]);

       if(!$order){
           return ExitCode::DATAERR;
       }

        var_dump($order->customer_id. "customer_id".PHP_EOL);
        var_dump($order->stock_id. "stock_id".PHP_EOL);
        var_dump($order->type. "type".PHP_EOL);
        var_dump($order->price. "price".PHP_EOL);
        var_dump($order->amount. "amount".PHP_EOL);

    }

    public function Input($message, $required = false, $error = 'Please Enter Value')
    {
        return $this->prompt($message, [
            'required' => (bool)$required,
            'error' => $error
        ]);
    }


}
